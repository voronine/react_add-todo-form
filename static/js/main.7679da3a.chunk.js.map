{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTitle","hasTittleError","setHasTittleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","onSubmit","event","preventDefault","todosIds","newTodo","Math","max","prevState","type","value","onChange","cleanedValue","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7679da3a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../Types';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={user?.email}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { TodoWithUser } from '../Types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo',\n      { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../Types';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section>\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoWithUser } from './components/Types';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst preparedTodos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(({ id }) => id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTittleError, setHasTittleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState<TodoWithUser[]>(preparedTodos);\n\n  function resetForm() {\n    setTitle('');\n    setUserId(0);\n  }\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    const cleanedValue = inputValue.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(cleanedValue);\n    setHasTittleError(false);\n  };\n\n  const handleChangeId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  function handleOnAdd(event: React.MouseEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    setHasTittleError(!title);\n    setHasUserIdError(!userId);\n    if (!title || !userId) {\n      return;\n    }\n\n    const user = usersFromServer.find(({ id }) => id === userId);\n\n    const todosIds = todos.map(({ id }) => id);\n    const maxTodosId = Math.max(...todosIds);\n\n    const newTodo = {\n      id: maxTodosId + 1,\n      title,\n      userId,\n      completed: false,\n      user: user || null,\n    };\n\n    setTodos((prevState) => [...prevState, newTodo]);\n    resetForm();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleOnAdd}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            className={cn('input is-normal', {\n              'is-danger': hasTittleError,\n            })}\n            onChange={handleChangeTitle}\n          />\n          {hasTittleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"control\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            className={cn('select is-normal', {\n              'is-danger': hasUserIdError,\n            })}\n            onChange={handleChangeId}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}